<!DOCTYPE html>
<html lang="en" class="">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat - <%= group.name %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
    }
  </script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
      #particles-js {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 0; /* Behind content but allows body background to show */
      }
      .content-container {
        position: relative;
        z-index: 1;
      }
      @keyframes slideIn {
          from { opacity: 0; transform: translateY(10px); }
          to { opacity: 1; transform: translateY(0); }
      }
      .message-bubble {
          animation: slideIn 0.3s ease-out forwards;
      }
  </style>
</head>

<body class="bg-gray-100 dark:bg-gray-900 flex items-center justify-center min-h-screen p-0 sm:p-4">
  
  <div id="particles-js"></div>

  <div class="content-container w-full h-screen sm:h-[95vh] max-w-4xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg flex flex-col sm:rounded-2xl shadow-2xl overflow-hidden">

    <!-- Header bar -->
    <div class="flex items-center justify-between bg-white/0 dark:bg-gray-800/0 text-gray-800 dark:text-gray-200 px-4 sm:px-6 py-3 border-b border-black/10 dark:border-white/10 flex-shrink-0">
      <div class="flex items-center space-x-3 sm:space-x-4">
          <a href="/groups" class="text-gray-500 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition" title="Back to Groups">
              <i class="fas fa-chevron-left"></i>
          </a>
          <h2 class="text-lg sm:text-xl font-semibold truncate">Group: <%= group.name %></h2>
      </div>
      <div class="flex items-center space-x-2 sm:space-x-4">
        <span class="text-xs sm:text-sm hidden sm:block">Logged in as <%= user.username %></span>
        <button id="file-panel-toggle" class="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition p-2 rounded-full" title="Shared Files">
            <i class="fas fa-folder"></i>
        </button>
        <button id="theme-toggle" class="text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition p-2 rounded-full" title="Toggle Theme">
            <i class="fas fa-moon" id="theme-toggle-dark-icon"></i>
            <i class="fas fa-sun" id="theme-toggle-light-icon" style="display: none;"></i>
        </button>
      </div>
    </div>

    <!-- Messages area -->
    <div id="messages" class="flex-1 flex flex-col-reverse overflow-y-auto bg-transparent p-4 sm:p-6 space-y-4 space-y-reverse">
      <% messages.slice().reverse().forEach(msg => { %>
        <% if(msg.username === user.username) { %>
          <div class="flex justify-end">
            <div class="bg-blue-600 text-white px-4 py-2 rounded-2xl max-w-xs sm:max-w-sm md:max-w-md shadow-md message-bubble text-sm sm:text-base">
              <%= msg.message %>
            </div>
          </div>
        <% } else { %>
          <div class="flex justify-start">
            <div class="bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-4 py-2 rounded-2xl border dark:border-gray-600 max-w-xs sm:max-w-sm md:max-w-md shadow-md message-bubble text-sm sm:text-base">
              <span class="block text-blue-600 dark:text-blue-400 font-semibold text-xs mb-1"><%= msg.username %></span>
              <%= msg.message %>
            </div>
          </div>
        <% } %>
      <% }); %>
    </div>

    <!-- Input area -->
    <div class="px-4 sm:px-6 py-3 bg-white/0 dark:bg-gray-800/0 border-t border-black/10 dark:border-white/10 flex-shrink-0">
      <div class="flex items-center space-x-2 sm:space-x-4">
        <!-- File Upload Form -->
        <form action="/chat/<%= group.id %>/upload" method="POST" enctype="multipart/form-data" class="flex-shrink-0">
            <label class="cursor-pointer p-2 rounded-full hover:bg-gray-200/50 dark:hover:bg-gray-700/50 transition" title="Upload File">
                <i class="fas fa-paperclip text-gray-500 dark:text-gray-400 text-lg sm:text-xl"></i>
                <input type="file" name="file" required class="hidden" onchange="this.form.submit()">
            </label>
        </form>

        <!-- Chat Message Form -->
        <form id="chat-form" class="flex items-center space-x-2 sm:space-x-4 flex-1">
            <input type="text" id="msg" autocomplete="off" placeholder="Type a message..."
              class="flex-1 bg-gray-200/50 dark:bg-gray-700/50 border-transparent rounded-full px-4 py-2 sm:px-5 sm:py-3 text-sm sm:text-base text-gray-800 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 transition">
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white rounded-full w-10 h-10 sm:w-12 sm:h-12 flex items-center justify-center transition-transform transform hover:scale-110 flex-shrink-0">
              <i class="fas fa-paper-plane text-sm sm:text-base"></i>
            </button>
        </form>
      </div>
    </div>
  </div>

  <!-- Shared files panel (off-canvas) -->
  <div id="file-panel-container" class="fixed inset-0 z-20 hidden">
      <!-- Backdrop -->
      <div id="file-panel-backdrop" class="absolute inset-0 bg-black/30"></div>
      <!-- Panel -->
      <div id="file-panel" class="absolute top-0 right-0 h-full w-full max-w-xs sm:w-80 bg-gray-100 dark:bg-gray-800 shadow-lg p-4 flex flex-col transform translate-x-full transition-transform duration-300 ease-in-out">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-200">Shared Files</h3>
            <button id="close-file-panel" class="text-gray-500 dark:text-gray-400 hover:text-black dark:hover:text-white">&times;</button>
          </div>
          <div class="flex-1 overflow-y-auto">
             <% if (files.length === 0) { %>
               <p class="text-gray-500 dark:text-gray-400 text-sm">No files uploaded yet.</p>
             <% } else { %>
               <div class="space-y-3">
                 <% files.forEach(file => { %>
                   <a href="<%= file.filepath %>" download
                     class="flex items-center space-x-3 bg-white dark:bg-gray-700 border dark:border-gray-600 rounded-lg p-2 text-sm hover:bg-gray-50 dark:hover:bg-gray-600 transition-all duration-200 shadow-sm">
                     <i class="fas fa-file-alt text-blue-500 dark:text-blue-400"></i>
                     <span class="truncate text-gray-700 dark:text-gray-300" title="<%= file.filename %>"><%= file.filename %></span>
                   </a>
                 <% }); %>
               </div>
             <% } %>
          </div>
      </div>
  </div>


  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
  <script>
    // --- Particle.js Configuration ---
    const particleConfig = (isDark) => {
        const particleColor = isDark ? "#ffffff" : "#374151";
        const lineColor = isDark ? "#ffffff" : "#374151";
        return { "particles":{ "number":{ "value":80, "density":{ "enable":true, "value_area":800 } }, "color":{ "value":particleColor }, "shape":{ "type":"circle" }, "opacity":{ "value":0.5, "random":false }, "size":{ "value":3, "random":true }, "line_linked":{ "enable":true, "distance":150, "color":lineColor, "opacity":0.4, "width":1 }, "move":{ "enable":true, "speed":2, "direction":"none", "random":false, "straight":false, "out_mode":"out", "bounce":false } }, "interactivity":{ "detect_on":"canvas", "events":{ "onhover":{ "enable":true, "mode":"grab" }, "onclick":{ "enable":true, "mode":"push" }, "resize":true }, "modes":{ "grab":{ "distance":140, "line_linked":{ "opacity":1 } }, "push":{ "particles_nb":4 } } }, "retina_detect":true };
    };
    const loadParticles = (isDark) => {
        particlesJS('particles-js', particleConfig(isDark));
    };
    
    // --- Socket.IO Logic ---
    const socket = io();
    const roomId = "<%= group.id %>";
    const username = "<%= user.username %>";
    const userId = "<%= user.id %>";
    socket.emit('joinRoom', roomId);

    const form = document.getElementById('chat-form');
    const msgInput = document.getElementById('msg');
    const messagesDiv = document.getElementById('messages');

    messagesDiv.scrollTop = 0;

    form.addEventListener('submit', e => {
      e.preventDefault();
      const msg = msgInput.value.trim();
      if (msg) {
        socket.emit('chatMessage', { room: roomId, userId, username, message: msg });
        msgInput.value = '';
      }
    });

    socket.on('chatMessage', data => {
      const div = document.createElement('div');
      div.classList.add('message-bubble');

      if (data.user === username) {
        div.className += ' flex justify-end';
        div.innerHTML = `<div class="bg-blue-600 text-white px-4 py-2 rounded-2xl max-w-xs sm:max-w-sm md:max-w-md shadow-md text-sm sm:text-base">${data.message}</div>`;
      } else {
        div.className += ' flex justify-start';
        div.innerHTML = `<div class="bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-4 py-2 rounded-2xl border dark:border-gray-600 max-w-xs sm:max-w-sm md:max-w-md shadow-md text-sm sm:text-base">
          <span class="block text-blue-600 dark:text-blue-400 font-semibold text-xs mb-1">${data.user}</span>${data.message}</div>`;
      }
      messagesDiv.prepend(div);
    });

    // --- Theme Management ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    const setTheme = (isDark) => {
        document.documentElement.classList.toggle('dark', isDark);
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
        if(themeToggleLightIcon) themeToggleLightIcon.style.display = isDark ? 'block' : 'none';
        if(themeToggleDarkIcon) themeToggleDarkIcon.style.display = isDark ? 'none' : 'block';
        loadParticles(isDark);
    };

    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const savedTheme = localStorage.getItem('theme');
    const isInitiallyDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
    setTheme(isInitiallyDark);

    themeToggleBtn.addEventListener('click', () => {
      const isCurrentlyDark = document.documentElement.classList.contains('dark');
      setTheme(!isCurrentlyDark);
    });

    // --- File Panel Logic ---
    const filePanelContainer = document.getElementById('file-panel-container');
    const filePanel = document.getElementById('file-panel');
    const filePanelToggleBtn = document.getElementById('file-panel-toggle');
    const closeFilePanelBtn = document.getElementById('close-file-panel');
    const filePanelBackdrop = document.getElementById('file-panel-backdrop');

    const openFilePanel = () => {
        filePanelContainer.classList.remove('hidden');
        setTimeout(() => {
            filePanel.classList.remove('translate-x-full');
        }, 10);
    };

    const closeFilePanel = () => {
        filePanel.classList.add('translate-x-full');
        setTimeout(() => {
            filePanelContainer.classList.add('hidden');
        }, 300);
    };

    filePanelToggleBtn.addEventListener('click', openFilePanel);
    closeFilePanelBtn.addEventListener('click', closeFilePanel);
    filePanelBackdrop.addEventListener('click', closeFilePanel);

  </script>
</body>
</html>
